---
name: Test & deploy

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: "0 6,18 * * *"
  release:
    types: [released]


jobs:
  test_repo:
    name: Test on ${{ matrix.os }} w/ Py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
        os: [ubuntu-latest, macos-latest]
      fail-fast: false
    steps:
    - name: Setup Python ${{ matrix.python-version }} env
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Ensure latest pip & wheel
      run: "python -m pip install -q --upgrade pip wheel"
    - name: Install dependencies
      run: |
           if [ "$RUNNER_OS" == "Linux" ]; then
             sudo apt-get update && sudo apt-get install -yq \
               apt-transport-https \
               bison \
               build-essential \
               cmake \
               flex \
               libbz2-dev \
               ninja-build \
               software-properties-common
           else
             brew install cmake
           fi
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Install from repo in test mode
      run: "pip install -e '.[dev]'"
    - name: Run tests
      run: "python -m pytest minihack/tests --basetemp=minihack_test_data"
    - name: Compress test output dir
      if: ${{ always() }}
      run: |
        tar -zcvf minihack_test_ci_${{ github.sha }}.tar.gz minihack_test_data
    - name: Save test results
      if: ${{ always() }}
      uses: actions/upload-artifact@v1
      with:
        name: minihack_test_data_${{ matrix.python-version }}
        path: minihack_test_ci_${{ github.sha }}.tar.gz
